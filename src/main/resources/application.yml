server:
   error:
      path: /error2
      whitelabel:
         enabled: false
   port: 9091
   servlet:
      contextPath: /social-networking-service
spring:
   application:
      name: social-networking-service
   banner:
      location: banner.txt
   config:
      import: classpath:creds.yaml
   cache:
      redis:
         enable-statistics: true
   cloud:
      config:
         discovery:
            enabled: false
   mail:
      host: smtp.gmail.com
      password: ${EMAIL_TOKEN}
      port: 587
      properties:
         mail:
            smtp:
               auth: true
               starttls:
                  enable: false
                  required: true
      test-connection: false
      username: ${EMAIL_USERNAME}
   main:
      lazy-initialization: true
   mvc:
      problemdetails:
         enabled: true
   profiles:
      active: ${SPRING_PROFILE}
   security:
      user:
         name: user
         password: pass
   servlet:
      multipart:
         max-file-size: 50MB
         max-request-size: 50MB
   thymeleaf:
      cache: false
      enabled: 'true '
      prefix: classpath:/templates/
      suffix: .html

   defer-datasource-initialization: true
   liquibase:
      change-log: classpath:db/changelog/master.yaml
      enabled: true
   sql:
      init:
         mode: always
         schema-locations: classpath:/sql/schema.sql

   rabbitmq:
      enabled: ${RABBITMQ_ENABLED}
      host: localhost
      port: 5672
      username: ${RABBITMQ_USERNAME_DEV}
      password: ${RABBITMQ_PASSWORD_DEV}

cache:
   redis:
      enable: false
   simple:
      enable: true
chatgpt:
   api-key: ''
eureka:
   client:
      fetch-registry: false
      register-with-eureka: false
      serviceUrl:
         defaultZone: http://localhost:8761/eureka
   instance:
      appname: profile
      prefer-ip-address: false
java:
   home: 'Java is installed in the folder: ${JAVA_HOME}'
logging:
   level:
      com:
         netflix:
            discovery: OFF
            eureka: OFF
      org:
         springframework:
            security:
               web:
                  FilterChainProxy: DEBUG
management:
   endpoint:
      health:
         show-details: always
   endpoints:
      web:
         exposure:
            include: '*'
   info:
      env:
         enabled: true
      git:
         enabled: true
         mode: full
   health:
      show-details: always
      redis:
         enabled: false
      mail:
         enabled: false
      rabbit:
         enabled: false
security:
   basic:
      authorize-mode: NONE
      enabled: true
springdoc:
   show-actuator: false




rabbitmq:
   queue:
      email:
         name: email_queue
   exchange:
      email:
         name: email_exchange
   binding:
      email:
         name: email_routing_key

# ---DEV



# ---H2